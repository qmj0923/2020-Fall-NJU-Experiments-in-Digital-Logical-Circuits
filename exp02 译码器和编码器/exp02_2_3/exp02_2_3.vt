// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "09/13/2020 14:48:39"
                                                                                
// Verilog Test Bench template for design : exp02_2_3
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 10 ns/ 1 ps
module exp02_2_3_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg [3:0] SW;
// wires                                               
wire [6:0]  HEX0;

// assign statements (if any)                          
exp02_2_3 i1 (
// port map - connection between master ports and signals/registers   
	.HEX0(HEX0),
	.SW(SW)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          

	SW[3:0] = 4'b0000; #10;
	SW[3:0] = 4'b0001; #10;
	SW[3:0] = 4'b0010; #10;
	SW[3:0] = 4'b0011; #10;
	SW[3:0] = 4'b0100; #10;
	SW[3:0] = 4'b0101; #10;
	SW[3:0] = 4'b0110; #10;
	SW[3:0] = 4'b0111; #10;
	SW[3:0] = 4'b1000; #10;
	SW[3:0] = 4'b1001; #10;
	SW[3:0] = 4'b1010; #10;
	SW[3:0] = 4'b1011; #10;
	SW[3:0] = 4'b1100; #10;
	SW[3:0] = 4'b1101; #10;
	SW[3:0] = 4'b1110; #10;
	SW[3:0] = 4'b1111; #10;

// --> end                                             
$display("Running testbench");                       
end                                                    
//always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
//begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
//@eachvec;                                              
// --> end                                             
//end                                                    
endmodule

