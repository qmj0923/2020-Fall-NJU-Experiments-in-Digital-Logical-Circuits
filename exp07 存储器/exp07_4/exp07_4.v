
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp07_4(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [1:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

	/*wire [6:0] out1_h, out1_l, out2_h, out2_l;*/
	
//=======================================================
//  Structural coding
//=======================================================

	rams_16 i1(CLOCK_50, KEY[1], ~KEY[0], SW[7:4], SW[3:0], SW[9:8], HEX1, HEX0);
	rams_ip i2(CLOCK_50, ~KEY[1], ~KEY[0], SW[7:4], SW[3:0], SW[9:8], HEX5, HEX4);
	
	assign LEDR = {~KEY[1], KEY[1]};
	
	/*
	assign HEX0 = out1_l;
	assign HEX1 = out1_h;
	assign HEX4 = out2_l;
	assign HEX5 = out2_h;
	*/
	/*
	always @ (posedge CLOCK_50) begin
		if (SW[9] == 0) begin
			LEDR[0] <= 1;
			LEDR[1] <= 0;
			HEX1 <= out1_h;
			HEX0 <= out1_l;
		end 
		else begin
			LEDR[0] <= 0;
			LEDR[1] <= 1;
			HEX5 <= out2_h;
			HEX4 <= out2_l;
		end
	end*/	

endmodule
