// addiu $1, $1, 0x01
01
00
21
24

// sll $2, $1, 1
40
10
01
00

// sllv $4, $2, $1
04
20
22
00

// sllv $16, $4, $2
04
80
44
00

// addu $6, $2, $4
21
30
44
00

// subu $3, $4, $1
23
18
81
00

// or $7, $6, $1
25
38
c1
00

// add $11, $4, $7
20
58
87
00

// sub $14, $16, $2
22
70
02
02

// srl $8, $16, 1
42
40
10
00

// srlv $5, $11, $1
06
28
2b
00

// xor $13, $5, $8
26
68
a8
00

// and $12, $14, $13
24
60
cd
01

// nor $0, $7, $12
27
00
ec
00

// addu $30, $16, $14
21
f0
0e
02

// addu $29, $30, $13
21
e8
cd
03

// sll $28, $11, 6
80
e1
0b
00

// addu $28, $28, $29
21
e0
9d
03

// sra $20, $28, 4
03
a1
1c
00

// srav $21, $28, $5
07
a8
bc
00

// 20 instructions

/* need to be modified: 
inst_ram.v->initial->readmemh->filename
top-level module->cpu cpu1->PC_end
*/

// little endian