// addi $1, $1, 0x1
01
00
21
20

//addi $2, $2, 0x1
01
00
42
20

// addi $12, $12, 0x2
02
00
8c
21

// addi $21, $21, 0x1
01
00
b5
22

// addi $22, $22, 0x2
02
00
d6
22

// bne $12, $21, 2
02
00
95
15

// sw $12, 4($21)
04
00
ac
ae

// lw $20, 4($21)
04
00
b4
8e

// bne $12, $22, 2
02
00
96
15

// sw $12, 4($21)
04
00
ac
ae

// lw $20, 4($21)
04
00
b4
8e

// addi $4, $4, 0x5
05
00
84
20

// addi $3, $3, 0x1 // 12
01
00
63
20

// add $1, $1, $2
20
08
22
00

// add $2, $1, $2
20
10
22
00

// beq $3, $4, 1
01
00
64
10

// j 12
0c
00
00
08

// sw $2, ($6)
00
00
c2
ac

// lw $5, ($6)
00
00
c5
8c

// bgtz $2, 1 // 19
01
00
40
1c

// blez $2, 2
02
00
40
18

// sub $2, $6, $2
22
10
c2
00

// j 19
13
00
10
08

// 23 instructions

/* need to be modified: 
inst_ram.v->initial->readmemh->filename
top-level module->cpu cpu1->PC_end
*/

// little endian